import javax.swing.*;
import java.awt.*;
public class Slip19 {
    public static void main(String[] args) {
        JFrame frame = new JFrame("College Label Example");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 100);
        frame.setLayout(new FlowLayout());
        JLabel label = new JLabel("Dr. D Y Patil College");
        label.setBackground(Color.RED);
        label.setOpaque(true);
        label.setFont(new Font("Arial", Font.PLAIN, 20));
        frame.add(label);
        frame.setVisible(true);
    }
}


import java.util.Scanner;
class CricketPlayer {
    int pid;
    String pname;
    int totalRuns;
    int inningsPlayed;
    int notOutTimes;
    public CricketPlayer(int pid, String pname, int totalRuns, int inningsPlayed, int notOutTimes) {
        this.pid = pid;
        this.pname = pname;
        this.totalRuns = totalRuns;
        this.inningsPlayed = inningsPlayed;
        this.notOutTimes = notOutTimes;
    }
    public double calculateAverage() {
        if (inningsPlayed - notOutTimes == 0) {
            return 0.0;
        }
        return (double) totalRuns / (inningsPlayed - notOutTimes);
    }
}
public class Slip19 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of players: ");
        int n = scanner.nextInt();
        CricketPlayer[] players = new CricketPlayer[n];
        for (int i = 0; i < n; i++) {
            System.out.println("Enter details for Player " + (i + 1));
            System.out.print("Player ID: ");
            int pid = scanner.nextInt();
            System.out.print("Player Name: ");
            String pname = scanner.next();
            System.out.print("Total Runs: ");
            int totalRuns = scanner.nextInt();
            System.out.print("Innings Played: ");
            int inningsPlayed = scanner.nextInt();
            System.out.print("Not Out Times: ");
            int notOutTimes = scanner.nextInt();
            players[i] = new CricketPlayer(pid, pname, totalRuns, inningsPlayed, notOutTimes);
        }
        double maxAverage = 0.0;
        CricketPlayer playerWithMaxAverage = null;
        for (CricketPlayer player : players) {
            double average = player.calculateAverage();
            if (average > maxAverage) {
                maxAverage = average;
                playerWithMaxAverage = player;
            }
        }
        System.out.println("Player with Maximum Average:");
        System.out.println("Player ID: " + playerWithMaxAverage.pid);
        System.out.println("Player Name: " + playerWithMaxAverage.pname);
        System.out.println("Average: " + maxAverage);
        scanner.close();
    }
}


class Complex:
    def __init__(self, realPart=0, imgPart=0):
        self.realPart = realPart
        self.imgPart = imgPart
    def display(self):
        print(self.realPart, "+", self.imgPart, "i")
    def __add__(self, other):
        real = self.realPart + other.realPart
        img = self.imgPart + other.imgPart
        return Complex(real, img)
c1 = Complex()
c2 = Complex()
print("Enter first complex number")
realPart = int(input("Enter the Real Part: "))
imgPart = int(input("Enter the Imaginary Part: "))
c1 = Complex(realPart, imgPart)
print("First Complex Number: ", end="")
c1.display()
print("Enter second complex number")
realPart = int(input("Enter the Real Part: "))
imgPart = int(input("Enter the Imaginary Part: "))
c2 = Complex(realPart, imgPart)
print("Second Complex Number: ", end="")
c2.display()
result = c1 + c2
print("Sum of two complex numbers is ", end="")
result.display()


import tkinter as tk
import random
import string
def generate_password():
    password_length = int(length_entry.get())
    if password_length < 1:
        result_label.config(text="Please enter a valid length")
        return
    password = ''.join(random.choice(string.ascii_letters) for _ in range(password_length))
    result_label.config(text="Generated Password: " + password)
window = tk.Tk()
window.title("Random Password Generator")
instructions_label = tk.Label(window, text="Enter the length of the password:")
instructions_label.pack(pady=10)
length_entry = tk.Entry(window)
length_entry.pack()
generate_button = tk.Button(window, text="Generate Password", command=generate_password)
generate_button.pack(pady=10)
result_label = tk.Label(window, text="")
result_label.pack()
window.mainloop()