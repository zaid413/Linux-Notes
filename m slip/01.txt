public class Slip1q1 {
    public static void main(String[] args) {
        for(char c='A';c<='Z';c++){
            System.out.print(c+" ");
        }
        System.out.println();
        for(char c='a';c<='z';c++){
            System.out.print(c+" ");
        }
    }
}


import java.io.*;
public class s12 {
    public static void main(String[] args) throws IOException {
        System.out.println("reading file...");
        FileReader fileReader = new FileReader("C:\\Users\\Desktop\\ag.txt");
        FileWriter fileWriter = new FileWriter("C:\\Users\\Desktop\\ag2.txt");
        int data = fileReader.read();
        System.out.println("writing file...");
        while (data != -1){
            String content = String.valueOf((char)data);
            if(Character.isAlphabetic(data)) {
                fileWriter.append(content);
            }else if(content.equals(" ")){
                fileWriter.append(" ");
            }
            data = fileReader.read();
        }
        System.out.println("\nCOPY FINISHED SUCCESSFULLY...");
        fileWriter.close();
        fileReader.close();
    }
}


numbers =[]
n=int(input('Enter number of elements : '))
for i in range(n):
 value=int(input())
 numbers.append(value)
print(numbers)
new_numbers=[]
for x in numbers:
 if x not in new_numbers:
    new_numbers.append(x)
print(new_numbers,": new list")


import tkinter as tk
from datetime import datetime
def calculate_age():
    birthdate_str = entry.get()
    birthdate = datetime.strptime(birthdate_str, "%Y-%m-%d")
    current_date = datetime.now()
    age = current_date.year - birthdate.year
    result_label.config(text=f"Your age is:{age} years")
root = tk.Tk()
root.title("Age Calculator")
entry_label = tk.Label(root, text="Enter your birthdate (YYYY-MM-DD):")
entry_label.pack()
entry = tk.Entry(root)
entry.pack()
calculate_button = tk.Button(root, text="Calculate Age", command=calculate_age)
calculate_button.pack()
result_label = tk.Label(root, text="")
result_label.pack()
root.mainloop()