import java.util.Scanner;
public class Slip19 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of strings: ");
        int numberOfStrings = scanner.nextInt();
        scanner.nextLine();
        String[] stringArray = new String[numberOfStrings];
        for (int i = 0; i < numberOfStrings; i++) {
            System.out.print("Enter string " + (i + 1) + ": ");
            stringArray[i] = scanner.nextLine();
        }
        scanner.close();
        System.out.println("Reversed strings:");
        for (String str : stringArray) {
            String reversedString = reverseString(str);
            System.out.println(reversedString);
        }
    }
    public static String reverseString(String str) {
        char[] chars = str.toCharArray();
        int left = 0;
        int right = chars.length - 1;
        while (left < right) {
            char temp = chars[left];
            chars[left] = chars[right];
            chars[right] = temp;
            left++;
            right--;
        }
        return new String(chars);
    }
}


import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
public class Slip19 {
    public static void main(String[] args) {
        Frame frame = new Frame("Multiplication Table");
        frame.setSize(300, 400);
        frame.setLayout(new FlowLayout());
        Label label = new Label("Enter a number:");
        frame.add(label);
        TextField textField = new TextField(10);
        frame.add(textField);
        Button button = new Button("Generate Table");
        frame.add(button);
        List tableList = new ArrayList();
        java.awt.List listBox = new java.awt.List(10);
        frame.add(listBox);
        final java.awt.List[] listBoxRef = {listBox};
        final List<String>[] tableListRef = new List[]{tableList};
        final TextField[] textFieldRef = {textField};
        button.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                listBoxRef[0].removeAll();
                try {
                    int number = Integer.parseInt(textFieldRef[0].getText());
                    for (int i = 1; i <= 10; i++) {
                        int result = number * i;
                        String entry = number + " x " + i + " = " + result;
                        tableListRef[0].add(entry);
                    }
                } catch (NumberFormatException ex) {
                    listBoxRef[0].add("Please enter a valid number.");
                }
                for (String entry : tableListRef[0]) {
                    listBoxRef[0].add(entry);
                }
            }
        });
        frame.setVisible(true);
    }
}


import tkinter as tk
def change_font_style():
    font_name = font_name_var.get()
    font_size = font_size_var.get()
    is_bold = bold_var.get()
    label.config(font=(font_name, font_size, 'bold' if is_bold else 'normal'))
root = tk.Tk()
root.title("Font Style Changer")
label = tk.Label(root, text="Hello, Font Style!", font=("Arial", 12))
label.pack(pady=20)
font_name_var = tk.StringVar()
font_name_var.set("Arial")
font_name_label = tk.Label(root, text="Font Name:")
font_name_label.pack()
font_name_option = tk.OptionMenu(root, font_name_var, "Arial", "Times New Roman", "Courier New")
font_name_option.pack()
font_size_var = tk.IntVar()
font_size_var.set(12)
font_size_label = tk.Label(root, text="Font Size:")
font_size_label.pack()
font_size_entry = tk.Entry(root, textvariable=font_size_var)
font_size_entry.pack()
bold_var = tk.BooleanVar()
bold_var.set(False)
bold_checkbutton = tk.Checkbutton(root, text="Bold", variable=bold_var)
bold_checkbutton.pack()
change_font_button = tk.Button(root, text="Change Font Style", command=change_font_style)
change_font_button.pack(pady=10)
root.mainloop()


import collections
str1 = input('Enter a string : ')
d = collections.defaultdict(int)
for c in str1:
 if c ==' ':
    continue
 d[c] += 1
for c in sorted(d, key=d.get):
 if d[c] > 1:
    print('%s - %d' % (c, d[c]))