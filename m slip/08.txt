import java.util.Scanner;
interface Shape {
    double area();
}
class Circle implements Shape {
    private double radius;
    public Circle(double radius) {
        this.radius = radius;
    }
    @Override
    public final double area() {
        return Math.PI * radius * radius;
    }
}
class Sphere implements Shape {
    private double radius;
    public Sphere(double radius) {
        this.radius = radius;
    }
    @Override
    public final double area() {
        return 4 * Math.PI * radius * radius;
    }
}
public class Slip19 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the radius of the circle: ");
        double circleRadius = scanner.nextDouble();
        Circle circle = new Circle(circleRadius);
        System.out.print("Enter the radius of the sphere: ");
        double sphereRadius = scanner.nextDouble();
        Sphere sphere = new Sphere(sphereRadius);
        scanner.close();
        System.out.println("Area of the Circle: " + circle.area());
        System.out.println("Area of the Sphere: " + sphere.area());
    }
}


import java.io.File;
import java.util.Scanner;
public class Slip19{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the directory path where you want to search for .txt files: ");
        String directoryPath = scanner.nextLine();
        File directory = new File(directoryPath);
        if (directory.exists() && directory.isDirectory()) {
            File[] files = directory.listFiles();
            System.out.println("Text files in the directory:");
            for (File file : files) {
                if (file.isFile() && file.getName().toLowerCase().endsWith(".txt")) {
                    System.out.println(file.getName());
                }
            }
        } else {
            System.err.println("Specified directory does not exist or is not a directory.");
        }
        scanner.close();
    }
}


num_items = int(input("Enter the number of items you want to input: "))
tuplex = ()
for _ in range(num_items):
    item = input("Enter an item: ")
    tuplex += (item,)
count_dict = {}
for item in tuplex:
    if item in count_dict:
        count_dict[item] += 1
    else:
        count_dict[item] = 1
for item, count in count_dict.items():
    if count > 1:
        print(f'{item} repeated {count} times')


class StringManipulator:
    def __init__(self):
        self.input_string = ""
    def get_String(self):
        self.input_string = input("Enter a string: ")
    def print_String(self):
        print(self.input_string.upper())
    def reverse_and_print_lower(self):
        words = self.input_string.split()
        reversed_string = ' '.join(reversed(words))
        print(reversed_string.lower())
string_manipulator = StringManipulator()
string_manipulator.get_String()
string_manipulator.print_String()
string_manipulator.reverse_and_print_lower()