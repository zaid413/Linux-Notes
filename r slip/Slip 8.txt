Q.1.A


Define an Interface Shape with abstract method area(). Write a java program to calculate an area of Circle and Sphere.(use final keyword)

interface shape
{
final static float pi=3.14f;
float area(float r);
}
class Circle implements shape
{
public float area(float r)
{
return(3.14f*r*r);
}
}
class sphere implements shape
{
public float area(float r)
{
return(2*3.14f*r*r);
}
}
class Main
{
public static void main(String args[])
{
Circle cir=new Circle();
sphere sp=new sphere();
shape s;
s=cir;
System.out.println("Area of Circle:"+s.area(3));
s=sp;
System.out.println("Area of Sphere:"+s.area(5));
}
}


Q.1.B

Write a java program to display the files having extension .txt from a given directory.    

import java.io.File;

 

public class ListTxtFiles {

    public static void main(String[] args) {

        // Specify the directory path where you want to search for .txt files

        String directoryPath = "C:/Program Files/Java/jdk1.7.0_80/bin";  // Replace with your directory path

 

        File directory = new File(directoryPath);

 

        if (directory.exists() && directory.isDirectory()) {

            File[] files = directory.listFiles();

 

            if (files != null) {

                System.out.println("List of .txt files in the directory:");

 

                for (File file : files) {

                    if (file.isFile() && file.getName().toLowerCase().endsWith(".txt")) {

                        System.out.println(file.getName());

                    }

                }

            } else {

                System.out.println("No files found in the directory.");

            }

        } else {

            System.out.println("The specified directory does not exist or is not a directory.");

        }

    }

}

Q.2.A

A) Write a python script to find the repeated items of a tuple.
import collections
tuplex = 2,4,5,6,2,3,4,4,7,5,6,7,1
dictx=collections.defaultdict(int)
for x in tuplex:
 dictx[x]+=1
for x in sorted(dictx,key=dictx.get):
 if dictx[x]>1:
 print('%d repeted %d times'%(x,dictx[x]))

Q.2.B


B) Write a Python class which has two methods get_String and print_String.
get_String accept a string from the user and print_String print the string in
upper case. Further modify the program to reverse a string word by word
and print it in lower case.
class StringManipulator:
 def __init__(self):
 self.input_string = ""
 def get_String(self):
 self.input_string = input("Enter a string: ")
 def print_String(self):
 print(self.input_string.upper())
 def reverse_and_print_lower(self):
 words = self.input_string.split()
 reversed_string = ' '.join(reversed(words))
 print(reversed_string.lower())
# Create an instance of the StringManipulator class
string_manipulator = StringManipulator()
# Get a string from the user
string_manipulator.get_String()
# Print the input string in uppercase
print("Uppercase String:")
string_manipulator.print_String()
# Reverse the string word by word and print in lowercase
print("Reversed and Lowercase String:")
string_manipulator.reverse_and_print_lower()

