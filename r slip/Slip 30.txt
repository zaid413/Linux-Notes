Q.1.A

Write a java program to accept a number from the user, if number is zero then  throw user defined Exception “Number is 0” otherwise calculate the sum of first and last digit of a given number (Use static keyword).


import java.util.*;
class ZeroException extends Exception
{
ZeroException()
{
super("Number is 0");
}
}
class Slip19
{
static int n;
public static void main(String args[])
{
int i,rem,sum=0;
try
{
Scanner sr=new Scanner(System.in);
n=sr.nextInt();
if(n==0)
{
throw new ZeroException();
}
else
{
rem=n%10;
sum=sum+rem;
if(n>9)
{
while(n>0)
{
rem=n%10;
n=n/10;
}
sum=sum+rem;
}
System.out.println("Sum is: "+sum);
}
}
catch(ZeroException e)
{
System.out.println(e);
}
}
}

Q.1.B


import java.awt.*;
import javax.swing.*;
class Slip8 extends JFrame
{
      JLabel l1,l2,l3,l4,l5,l6;
      JTextField t1,t2,t3;
      JTextArea t;
      JPanel p,p1,p2,p3;
      ButtonGroup bg;
      JRadioButton m,f;
      JCheckBox c1,c2,c3;
      JButton b1,b2;
      Slip8()
      {
            p =new JPanel();
            p1=new JPanel();
            l1=new JLabel("First Name ");
            l2=new JLabel("last Name ");
            l3=new JLabel("Address ");
            l4=new JLabel("mobile No ");
              t1=new JTextField(10);
            t2=new JTextField(10);
            t3=new JTextField(10);
            t=new JTextArea(2,10);
            p.add(l1);  p.add(t1);
            p.add(l2);  p.add(t2);
            p.add(l3);  p.add(t);
            p.add(l4);  p.add(t3);
            p.setLayout(new GridLayout(4,2));
            add(p);
                        l5=new JLabel("Gender ");
            m = new JRadioButton("male");
            f = new JRadioButton("female");
                        bg = new ButtonGroup();
            bg.add(m); 
            bg.add(f);
            p1.add(l5);
            p1.add(m);
            p1.add(f);
            p1.setLayout(new GridLayout(1,3));
                        p2=new JPanel();
            l6=new JLabel("Your Interests  ");
            c1=new JCheckBox("Computer");
            c2=new JCheckBox("Sports");
            c3=new JCheckBox("Music");
                        p2.add(l6);
            p2.add(c1);
            p2.add(c2);
            p2.add(c3);
            p2.setLayout(new GridLayout(1,4));
                        p3=new JPanel();
            b1=new JButton("submit");
            b2=new JButton("clear");
            p3.add(b1);
            p3.add(b2);
                        add(p);
            add(p1);
            add(p2);
            add(p3);
            setSize(300,400);
            setLayout(new FlowLayout(FlowLayout.LEFT)); 
                setVisible(true);
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      }
      public static void main(String a[])
      {
            new Slip8();
      }
}


Q.2.A

A) Write a Python GUI program to accept a string and a character from user and
count the occurrences of a character in a string.
import tkinter as tk
def count_occurrences():
 input_string = input_entry.get()
 character = char_entry.get()
 if not character:
 result_label.config(text="Please enter a character.")
 return
 count = input_string.count(character)
 result_label.config(text=f"Occurrences of '{character}' in the string: {count}")
# Create the main application window
app = tk.Tk()
app.title("Character Occurrence Counter")
# Create and configure input widgets
input_label = tk.Label(app, text="Enter a string:")
input_label.pack()
input_entry = tk.Entry(app)
input_entry.pack()
char_label = tk.Label(app, text="Enter a character:")
char_label.pack()
char_entry = tk.Entry(app)
char_entry.pack()
count_button = tk.Button(app, text="Count Occurrences",
command=count_occurrences)
count_button.pack()
result_label = tk.Label(app, text="")
result_label.pack()
app.mainloop()

Q.2.B


B) Python Program to Create a Class in which One Method Accepts a String from
the User and Another method Prints it. Define a class named Country which has a
method called print Nationality. Define subclass named state from Country which
has a method called printState. Write a method to print state, country and
nationality.
class Country:
 def __init__(self):
 self.nationality = ""
 def get_nationality(self):
 self.nationality = input("Enter the nationality: ")
 def print_nationality(self):
 print("Nationality:", self.nationality)
class State(Country):
 def __init__(self):
 super().__init()
 self.state_name = ""
 def get_state_name(self):
 self.state_name = input("Enter the state name: ")
 def print_state(self):
 print("State:", self.state_name)
 def print_state_country_nationality(self):
 self.get_nationality()
 self.get_state_name()
 self.print_state()
 self.print_nationality()
# Create an instance of the State class
state_instance = State()
# Call the method to print state, country, and nationality
state_instance.print_state_country_nationality()