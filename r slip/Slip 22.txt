Q.1.A

Write a Java program to calculate factorial of a number using recursion.

 

import java.util.Scanner;

 

public class FactorialCalculator {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

 

        System.out.print("Enter a non-negative integer to calculate its factorial: ");

        int n = scanner.nextInt();

 

        if (n < 0) {

            System.out.println("Factorial is not defined for negative numbers.");

        } else {

            long factorial = calculateFactorial(n);

            System.out.println("Factorial of " + n + " is: " + factorial);

        }

    }

 

    public static long calculateFactorial(int n) {

        if (n == 0 || n == 1) {

            return 1;

        } else {

            return n * calculateFactorial(n - 1);

        }

    }

}


Q.1.B

Write a java program for the following:                                                                      

To create a file.

To rename a file.

To delete a file.

To display path of a file.

 

import java.io.File;

import java.io.IOException;

 

public class FileOperations {

    public static void main(String[] args) {

        // Create a file

        createFile("sample.txt");

 

        // Rename a file

        renameFile("sample.txt", "newSample.txt");

 

        // Display the path of a file

        displayFilePath("newSample.txt");

 

        // Delete a file

        deleteFile("newSample.txt");

    }

 

    public static void createFile(String fileName) {

        File file = new File(fileName);

 

        try {

            if (file.createNewFile()) {

                System.out.println("File created: " + file.getName());

            } else {

                System.out.println("File already exists.");

            }

        } catch (IOException e) {

            System.out.println("An error occurred while creating the file.");

            e.printStackTrace();

        }

    }

 

    public static void renameFile(String oldFileName, String newFileName) {

        File oldFile = new File(oldFileName);

        File newFile = new File(newFileName);

 

        if (oldFile.renameTo(newFile)) {

            System.out.println("File renamed to: " + newFileName);

        } else {

            System.out.println("Unable to rename the file.");

        }

    }

 

    public static void displayFilePath(String fileName) {

        File file = new File(fileName);

        System.out.println("File path: " + file.getAbsolutePath());

    }

 

    public static void deleteFile(String fileName) {

        File file = new File(fileName);

 

        if (file.delete()) {

            System.out.println("File deleted: " + fileName);

        } else {

            System.out.println("Unable to delete the file.");

        }

    }

}


Q.2.A

A) Write a python class to accept a string and number n from user and display n
 repetition of strings by overloading * operator.
class StringRepeater:
 def __init__(self, input_string):
 self.input_string = input_string
 def __mul__(self, n):
 if isinstance(n, int) and n >= 0:
 return self.input_string * n
 else:
 raise ValueError("n should be a non-negative integer")
# Example usage:
user_input = input("Enter a string: ")
n = int(input("Enter the number of repetitions: "))
repeater = StringRepeater(user_input)
result = repeater * n
print("Result:", result)


Q.2.B


B) Write a python script to implement bubble sort using list.
def bubble_sort(list1):
 for i in range(0,len(list1)-1):
 for j in range(len(list1)-1):
 if(list1[j]>list1[j+1]):
 temp = list1[j]
 list1[j] = list1[j+1]
 list1[j+1] = temp
 return list1

list1 =[]
n=int(input('Enter number of elements : '))
for i in range(n):
 value=int(input())
 list1.append(value)
print("The unsorted list is: ", list1)
print("The sorted list is: ", bubble_sort(list1))