Q.1.A

Write a java program to display Label with text “Dr. D Y Patil College”, background color Red and font size 20 on the frame.

 import java.awt.*;

class Slip7 extends Frame

{

Slip7()

{

Label l=new Label("Dr. D Y Patil College");

Font f=new Font("Georgia",Font.BOLD,40);

l.setFont(f);

setForeground(Color.blue);

setBackground(Color.red);

add(l);

setLayout(new FlowLayout());

setSize(200,200);

setVisible(true);

}

public static void main(String arg[])

{

new Slip7();

}

}

Q.1.B

Write a java program to accept details of ‘n’ cricket player (pid, pname, totalRuns, InningsPlayed, NotOuttimes). Calculate the average of all the players. Display the details of player having maximum average. (Use Array of Object) 

import java.io.*;

import java.util.Scanner;

 

class CricketPlayer1 {

    int pid;

    String pname;

    int totalRuns;

    int inningsPlayed;

    int notOutTimes;

    double average;

 

    CricketPlayer1(int pid, String pname, int totalRuns, int inningsPlayed, int notOutTimes) {

        this.pid = pid;

        this.pname = pname;

        this.totalRuns = totalRuns;

        this.inningsPlayed = inningsPlayed;

        this.notOutTimes = notOutTimes;

        this.average = (double) totalRuns / (inningsPlayed - notOutTimes);

    }

}

 

public class CricketPlayer {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

 

        System.out.print("Enter the number of cricket players: ");

        int n = scanner.nextInt();

 

        CricketPlayer1[] players = new CricketPlayer1[n];

 

        for (int i = 0; i < n; i++) {

            System.out.println("\nEnter details for player " + (i + 1) + ":");

            System.out.print("Player ID: ");

            int pid = scanner.nextInt();

            scanner.nextLine(); // Consume the newline

            System.out.print("Player Name: ");

            String pname = scanner.nextLine();

            System.out.print("Total Runs: ");

            int totalRuns = scanner.nextInt();

            System.out.print("Innings Played: ");

            int inningsPlayed = scanner.nextInt();

            System.out.print("Not Out Times: ");

            int notOutTimes = scanner.nextInt();

 

            players[i] = new CricketPlayer1(pid, pname, totalRuns, inningsPlayed, notOutTimes);

        }

 

        double maxAverage = 0;

        int maxAverageIndex = 0;

 

        for (int i = 0; i < n; i++) {

            if (players[i].average > maxAverage) {

                maxAverage = players[i].average;

                maxAverageIndex = i;

            }

        }

 

        System.out.println("\nPlayer with the maximum average:");

        System.out.println("Player ID: " + players[maxAverageIndex].pid);

        System.out.println("Player Name: " + players[maxAverageIndex].pname);

        System.out.println("Average: " + players[maxAverageIndex].average);

 

        scanner.close();

    }

}

Q.2.A

A) Write Python class to perform addition of two complex numbers using
binary + operator overloading.
class Complex ():
 def initComplex(self):
 self.realPart = int(input("Enter the Real Part: "))
 self.imgPart = int(input("Enter the Imaginary Part: "))
 def display(self):
 print(self.realPart,"+",self.imgPart,"i")
 def sum(self, c1, c2):
 self.realPart = c1.realPart + c2.realPart
 self.imgPart = c1.imgPart + c2.imgPart
c1 = Complex()
c2 = Complex()
c3 = Complex()
print("Enter first complex number")
c1.initComplex()
print("First Complex Number: ", end="")
c1.display()
print("Enter second complex number")
c2.initComplex()
print("Second Complex Number: ", end="")
c2.display()
print("Sum of two complex numbers is ", end="")
c3.sum(c1,c2)
c3.display()



Q.2.B


B) Write python GUI program to generate a random password with upper
and lower case letters.
import tkinter as tk
import random
import string
def generate_password():
 password_length = int(length_entry.get())
 if password_length < 1:
 result_label.config(text="Please enter a valid length")
 return
 password = ''.join(random.choice(string.ascii_letters) for _ in
range(password_length))
 result_label.config(text="Generated Password: " + password)
# Create the main window
window = tk.Tk()
window.title("Random Password Generator")
# Label for instructions
instructions_label = tk.Label(window, text="Enter the length of the password:")
instructions_label.pack(pady=10)
# Entry for password length
length_entry = tk.Entry(window)
length_entry.pack()
# Button to generate password
generate_button = tk.Button(window, text="Generate Password",
command=generate_password)
generate_button.pack(pady=10)
# Label to display the generated password
result_label = tk.Label(window, text="")
result_label.pack()
# Start the GUI main loop
window.mainloop()